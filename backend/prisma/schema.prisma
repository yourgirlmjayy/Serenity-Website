// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @unique @default(autoincrement())
  email       String       @unique
  name        String?
  password    String
  personality String?
  createdAt   DateTime     @default(now())
  moodBoards  MoodBoard[]
  roomMembers RoomMember[]
  responses   Response[]
  playlists   Playlist[]
  House       House?       @relation(fields: [houseId], references: [id])
  houseId     Int?
}

model House {
  id    Int    @id @unique @default(autoincrement())
  name  String
  rooms Room[]
  users User[]
}

model Room {
  id          Int          @id @unique @default(autoincrement())
  name        String
  houseId     Int
  house       House        @relation(fields: [houseId], references: [id])
  roomMembers RoomMember[]
  responses   Response[]
}

model RoomMember {
  id     Int  @id @unique @default(autoincrement())
  userId Int
  roomId Int
  user   User @relation(fields: [userId], references: [id])
  room   Room @relation(fields: [roomId], references: [id])
}

model Response {
  id      Int    @id @default(autoincrement())
  content String
  userId  Int
  roomId  Int
  user    User   @relation(fields: [userId], references: [id])
  room    Room   @relation(fields: [roomId], references: [id])
}

model MoodBoard {
  id       Int      @id @default(autoincrement())
  moodType String // e.g., angry, upset, anxious content 
  gifUrl   String?
  date     DateTime @default(now())
  userId   Int
  user     User     @relation(fields: [userId], references: [id])
}

model Playlist {
  id         Int      @id @default(autoincrement())
  userId     Int
  date       DateTime @default(now())
  spotifyUrl String // URL to the Spotify playlist 
  user       User     @relation(fields: [userId], references: [id])
}
