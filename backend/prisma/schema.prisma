// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @unique @default(autoincrement())
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt
  profile     Profile?
  entries     UserEntry[]
}

model Profile {
  id        Int   @id @unique @default(autoincrement())
  name      String
  bio       String 
  age       Int
  birthday  DateTime
  userId    Int   @unique
  user      User  @relation(fields: [userId], references: [id])
}


model ActivityCategory {
  id        Int @id   @unique @default(autoincrement())
  category      String
  options   ActivityOption[]
}

model ActivityOption{
  id              Int @id @unique @default(autoincrement())
  option           String
  categoryId      Int
  category        ActivityCategory @relation(fields: [categoryId], references: [id])
  icon            String
  userEntry       UserEntry[]
}

model UserEntry {
  id                Int @id @unique @default(autoincrement())
  date              DateTime @default(now())
  mood              String?
  prompt            String?
  content           String?
  activityOptionId  Int?
  activityOption    ActivityOption?  @relation(fields: [activityOptionId], references: [id])
  userId            Int
  user              User @relation(fields: [userId], references: [id])
}




